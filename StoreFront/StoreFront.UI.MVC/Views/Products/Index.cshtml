@model IEnumerable<StoreFront.DATA.EF.Models.Product>

@{
    ViewData["Title"] = "All Products";
}



<!-- Start Banner Area -->
<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1 class="">All Products</h1>
                <nav class="d-flex align-items-center">
                    @* <p><a asp-action="Create">Add New Product</a></p> *@
                    @* <a href="#">Shop<span class="lnr lnr-arrow-right"></span></a>
                    <a href="category.html">Fashon Category</a> *@
                </nav>
            </div>
        </div>
    </div>
</section>
<!-- End Banner Area -->



<p class="text-center">
    <a asp-action="Create" style="font-size: 1em;" class="genric-btn primary mt-4 mr-2">Create New Product</a>
    <a asp-action="TiledProducts" style="font-size: 1em;" class="genric-btn info mt-4 ml-2">Tile View</a>
</p>
<section class="col-md-10 offset-md-1 col-sm-10 offset-sm-1 pb-4 pt-3 mb-4 justify-content-center">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ProductImage)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UnitPrice)
                </th>
                @* <th>
                    @Html.DisplayNameFor(model => model.UnitCost)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.UnitsInStock)
                </th>
                @* <th>
                    @Html.DisplayNameFor(model => model.UnitsOnOrder)
                </th> *@
                @* <th>
                    @Html.DisplayNameFor(model => model.ReorderTrigger)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UnitWeightLbs)
                </th> *@
                <th>
                    @Html.DisplayNameFor(model => model.UnitSizeFlOunce)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Category)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ProductStatus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Supplier)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model) {
            <tr>
                <td>
                    @* @Html.DisplayFor(modelItem => item.ProductImage) *@
                    <img src="~/img/t_@item.ProductImage" class="img-fluid" alt="@item.ProductName" />
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.ProductId">@Html.DisplayFor(modelItem => item.ProductName)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductDescription)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitPrice)
                </td>
                @* <td>
                    @Html.DisplayFor(modelItem => item.UnitCost)
                </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.UnitsInStock)
                </td>
                @* <td>
                    @Html.DisplayFor(modelItem => item.UnitsOnOrder)
                </td> *@
                @* <td>
                    @Html.DisplayFor(modelItem => item.ReorderTrigger)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UnitWeightLbs)
                </td> *@
                <td>
                    @Html.DisplayFor(modelItem => item.UnitSizeFlOunce)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.CategoryName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductStatus.ProductStatusName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Supplier.CompanyName)
                </td>
                <td>
                        <span>
                            <a asp-action="Edit" asp-route-id="@item.ProductId" class="text-warning"><i class="fa fa-pencil-square text-warning"></i> Edit</a> <br />
                        </span>
                    @* <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a> *@
                        @if (item.OrderProducts.Count() == 0)//item.OrderProducts retrieves any related records for the Product
                        {
                            <a asp-action="Delete" asp-route-id="@item.ProductId" class="text-danger"><i class="fa fa-trash"></i> Delete</a>
                        }
                        else
                        {
                            <a disabled="true" class="text-danger" style="text-decoration: line-through;" title="Can't delete -
                            referenced by other records."><i class="fa fa-ban">&nbsp;</i>Delete</a>
                        }
                </td>
            </tr>
    }
        </tbody>
</table>
</section>
